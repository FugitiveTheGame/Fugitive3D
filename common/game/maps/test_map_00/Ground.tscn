[gd_scene load_steps=8 format=2]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 10, 0.0144828, 10 )

[sub_resource type="PlaneMesh" id=2]
size = Vector2( 20, 20 )
subdivide_width = 10
subdivide_depth = 10

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0.746094, 0.405433, 0.405433, 1 )

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:5
	vec3 n_out5p0 = vec3(0.746094, 0.405433, 0.405433);
	float n_out5p1 = 1.000000;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_out4p0 = n_out5p0 * n_out3p0;

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -161.112, 75 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 0, 260 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 200, 140 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -20, 140 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 3, 0, 4, 1, 5, 0, 4, 0 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[node name="Ground" type="StaticBody"]
collision_layer = 2
collision_mask = 0

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.013997, 0 )
shape = SubResource( 1 )

[node name="CSGMesh" type="CSGMesh" parent="."]
mesh = SubResource( 2 )
material = SubResource( 7 )
